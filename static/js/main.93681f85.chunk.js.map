{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","config.js","index.js"],"names":["App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","Survey","applyTheme","getRandomInRange","from","to","fixed","Math","random","toFixed","ReactDOM","render","json","title","description","pages","name","elements","type","isRequired","requiredErrorText","choices","value","text","inputType","onComplete","survey","console","log","JSON","stringify","data","collection","add","gender_id","age","appointment_day","contact1","contact2","address","zone","coords","race","program","medical_history","priority","catch","error","document","getElementById"],"mappings":"4MAAe,I,mBCwBAA,I,QCZAC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,EACT,GAEJ,E,QCKKQ,G,MADkBC,IAASC,cAVV,CACrBC,OAAQ,0CACRC,WAAY,oCACZC,UAAW,oBACXC,cAAe,gCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAIUC,aCN3BC,gBAAqBC,WAAW,YAkBhC,SAASC,EAAiBC,EAAMC,EAAIC,GAChC,OAA6D,GAArDC,KAAKC,UAAYH,EAAKD,GAAQA,GAAMK,QAAQH,EAEvD,CA8BDI,IAASC,OACP,cAAC,SAAD,CAAeC,KAlDA,CAAEC,MAAO,oBAAqBC,YAAa,kEAC5DC,MAAO,CAAC,CAAEC,KAAM,QAChBC,SAAU,CAAC,CAAEC,KAAM,OAAQF,KAAM,YAAaH,MAAO,YAAaM,YAAY,EAAMC,kBAAmB,oBACvG,CAAEF,KAAM,aAAcF,KAAM,aAAcH,MAAO,SACjDQ,QAAS,CAAC,CAAEC,MAAO,SAAUC,KAAM,UAAY,CAAED,MAAO,OAAQC,KAAM,QAAU,CAAED,MAAO,QAASC,KAAM,SAAW,CAAED,MAAO,gBAAiBC,KAAM,uBACnJ,CAAEL,KAAM,OAAQF,KAAM,kBAAmBH,MAAO,MAAOM,YAAY,EAAMC,kBAAmB,aAC5F,CAACF,KAAM,OAAQF,KAAM,YAAaH,MAAO,OAAQM,YAAY,EAAMC,kBAAmB,cACtF,CAAEF,KAAM,OAAQF,KAAM,YAAaH,MAAO,kBAAmBM,YAAW,EAAMC,kBAAmB,yBACjG,CAAEF,KAAM,OAAQF,KAAM,YAAaH,MAAO,sBAAuBM,YAAY,EAAMC,kBAAmB,6BACtG,CAAEF,KAAM,OAAQF,KAAM,iBAAkBH,MAAO,sBAAuBM,YAAY,EAAMC,kBAAmB,6BAC3G,CAAEF,KAAM,OAAQF,KAAM,YAAaH,MAAO,iBAAkBM,YAAY,EAAMC,kBAAmB,wBACjG,CAAEF,KAAM,OAAQF,KAAM,YAAaH,MAAO,SAAUM,YAAY,EAAMC,kBAAmB,gBACzF,CAAEF,KAAM,OAAQM,UAAW,SAAUR,KAAM,YAAaH,MAAO,WAAYM,YAAY,EAAMC,kBAAmB,kBAChH,CAAEF,KAAM,OAAQF,KAAM,YAAaH,MAAO,WAC1C,CAAEK,KAAM,UAAWF,KAAM,aAAcH,MAAO,uBAoCXY,WA7BnC,SAA0BC,GACtBC,QAAQC,IAAI,mBAAqBC,KAAKC,UAAUJ,EAAOK,KAAP,YAGhDzC,EAAG0C,WAAW,YAAYC,IAAI,CAC1BjB,KAAMU,EAAOK,KAAP,UACNG,UAAWR,EAAOK,KAAP,WACXI,IAAMT,EAAOK,KAAP,gBACNK,gBAAiBV,EAAOK,KAAP,UACjBM,SAAUX,EAAOK,KAAP,UACVO,SAAUZ,EAAOK,KAAP,eACVQ,QAASb,EAAOK,KAAP,UACTS,KAAMd,EAAOK,KAAP,UACNU,OAAStC,EAAiB,GAAI,GAAI,GAAK,KAAOA,GAAkB,IAAK,GAAI,GACzEuC,KAAOhB,EAAOK,KAAP,UACPY,QAASjB,EAAOK,KAAP,UACTa,gBAAkBlB,EAAOK,KAAP,WAClBc,SAAUnB,EAAOK,KAAP,YAEb/C,MAAK,WACF2C,QAAQC,IAAI,iCACf,IACAkB,OAAM,SAACC,GACJpB,QAAQoB,MAAM,2BAA4BA,EAC7C,GACJ,IAIoEC,SAASC,eAAe,oBAK7FpE,G","file":"static/js/main.93681f85.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import firebase from \"firebase/compat/app\";\nimport \"firebase/compat/firestore\";\n\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDKq7ac8s-ZlpDmlShbqgPAOzio-zKA-3I\",\n  authDomain: \"hit-with-database.firebaseapp.com\",\n  projectId: \"hit-with-database\",\n  storageBucket: \"hit-with-database.appspot.com\",\n  messagingSenderId: \"674336402509\",\n  appId: \"1:674336402509:web:4527992724f50c76aa8004\",\n  measurementId: \"G-PPKFSB0ML3\"\n};\n\nconst firebaseInitial = firebase.initializeApp(firebaseConfig);\nconst db = firebaseInitial.firestore();\n\nexport { firebaseInitial, db };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport \"survey-react/survey.css\";\nimport * as Survey from \"survey-react\";\nimport reportWebVitals from './reportWebVitals';\nimport {firebaseInitial, db} from './config.js';\n\nSurvey.StylesManager.applyTheme(\"darkrose\");\n\nvar surveyJSON = { title: \"Enter New Patient\", description: \"Use this questionnaire to enter new patients into the database.\",\npages: [{ name: \"page1\",\nelements: [{ type: \"text\", name: \"question1\", title: \"Full Name\", isRequired: true, requiredErrorText: \"Enter full name.\" },\n{ type: \"radiogroup\", name: \"question11\", title: \"Gender\",\nchoices: [{ value: \"Female\", text: \"Female\" }, { value: \"Male\", text: \"Male\" }, { value: \"Other\", text: \"Other\" }, { value: \"Not_preferred\", text: \"Prefer not to say\" }] },\n{ type: \"text\", name: \"question10Other\", title: \"Age\", isRequired: true, requiredErrorText: \"Enter age\"},\n{type: \"text\", name: \"question3\", title: \"Race\", isRequired: true, requiredErrorText: \"Enter race\" },\n{ type: \"text\", name: \"question2\", title: \"Appointment Day\", isRequired:true, requiredErrorText: \"Enter appointment day\",},\n{ type: \"text\", name: \"question5\", title: \"Emergency Contact 1\", isRequired: true, requiredErrorText: \"Enter emergency contact 1\"},\n{ type: \"text\", name: \"question5Other\", title: \"Emergency Contact 2\", isRequired: true, requiredErrorText: \"Enter emergency contact 2\"},\n{ type: \"text\", name: \"question4\", title: \"Street Address\", isRequired: true, requiredErrorText: \"Enter street address\" },\n{ type: \"text\", name: \"question6\", title: \"County\", isRequired: true, requiredErrorText: \"Enter county\" },\n{ type: \"text\", inputType: \"number\", name: \"question7\", title: \"Priority\", isRequired: true, requiredErrorText: \"Enter priority\" },\n{ type: \"text\", name: \"question9\", title: \"Program\"},\n{ type: \"comment\", name: \"question10\", title: \"Medical History\" }] }] }\n\nfunction getRandomInRange(from, to, fixed) {\n    return (Math.random() * (to - from) + from).toFixed(fixed) * 1;\n    // .toFixed() returns string, so ' * 1' is a trick to convert to number\n}\n\nfunction sendDataToServer(survey) {\n    console.log(\"Survey results: \" + JSON.stringify(survey.data[\"question1\"]));\n\n    //db.collection(\"nurses\").document(nurses.nursesId).collection(\"patients_profiles\").\n    db.collection(\"patients\").add({\n        name: survey.data[\"question1\"],\n        gender_id: survey.data[\"question11\"],\n        age: (survey.data[\"question10Other\"]),\n        appointment_day: survey.data[\"question2\"],\n        contact1: survey.data[\"question5\"],\n        contact2: survey.data[\"question5Other\"],\n        address: survey.data[\"question4\"],\n        zone: survey.data[\"question6\"],\n        coords: (getRandomInRange(40, 50, 3) + \", \" + getRandomInRange(-85, -80, 2)),\n        race: (survey.data[\"question3\"]),\n        program: survey.data[\"question9\"],\n        medical_history: (survey.data[\"question10\"]),\n        priority: survey.data[\"question7\"]\n    })\n    .then(() => {\n        console.log(\"Document successfully written!\");\n    })\n    .catch((error) => {\n        console.error(\"Error writing document: \", error);\n    });\n}\n\n\nReactDOM.render(\n  <Survey.Survey json={surveyJSON} onComplete={sendDataToServer} />, document.getElementById(\"surveyContainer\"))\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}