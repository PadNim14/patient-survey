{"version":3,"sources":["components/patient_survey.js","App.js","reportWebVitals.js","index.js"],"names":["PatientSurvey","survey","a","date","Date","today","getMonth","getDate","getFullYear","newPatient","name","String","data","gender_id","age","appointment_day","medic","contact1","contact2","address","zone","race","program","diagnosis_1","diagnosis_2","priority","start_date","fetch","method","headers","body","JSON","stringify","then","console","log","catch","error","window","alert","json","title","description","pages","elements","type","isRequired","requiredErrorText","choices","value","text","inputType","onComplete","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Survey","applyTheme","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dea7b940.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport \"survey-react/survey.css\";\r\nimport * as Survey from \"survey-react\";\r\n\r\nexport default function PatientSurvey() {\r\n    var surveyJSON = {\r\n        title: \"Enter New Patient\", description: \"Use this questionnaire to enter new patients into the database.\",\r\n        pages: [{\r\n            name: \"page1\",\r\n            elements: [{ type: \"text\", name: \"question1\", title: \"Full Name\", isRequired: true, requiredErrorText: \"Enter full name.\" },\r\n            {\r\n                type: \"radiogroup\", name: \"question11\", title: \"Gender\",\r\n                choices: [{ value: \"Female\", text: \"Female\" }, { value: \"Male\", text: \"Male\" }, { value: \"Other\", text: \"Other\" }, { value: \"Not_preferred\", text: \"Prefer not to say\" }]\r\n            },\r\n            { type: \"text\", inputType: \"number\", name: \"question10Other\", title: \"Age\", isRequired: true, requiredErrorText: \"Enter age\" },\r\n            { type: \"text\", name: \"question3\", title: \"Race\", isRequired: true, requiredErrorText: \"Enter race\" },\r\n            { type: \"text\", name: \"question2\", title: \"Appointment Day\", isRequired: true, requiredErrorText: \"Enter appointment day\", },\r\n            { type: \"text\", name: \"question12\", title: \"Assigned Paramedic\", isRequired: true, requiredErrorText: \"Enter assigned paramedic day\", },\r\n            { type: \"text\", name: \"question5\", title: \"Emergency Contact 1\", isRequired: true, requiredErrorText: \"Enter emergency contact 1\" },\r\n            { type: \"text\", name: \"question5Other\", title: \"Emergency Contact 2\", isRequired: true, requiredErrorText: \"Enter emergency contact 2\" },\r\n            { type: \"text\", name: \"question4\", title: \"Street Address\", isRequired: true, requiredErrorText: \"Enter street address\" },\r\n            { type: \"text\", name: \"question6\", title: \"Zone\", isRequired: true, requiredErrorText: \"Enter county\" },\r\n            { type: \"text\", name: \"question9\", title: \"Program\", isRequired: true, requiredErrorText: \"Enter hospital program\" },\r\n            { type: \"text\", name: \"question13\", title: \"Primary Diagnosis\", isRequired: true, requiredErrorText: \"Enter primary diagnosis\" },\r\n            { type: \"comment\", name: \"question10\", title: \"Additional Diagnoses\", isRequired: true, requiredErrorText: \"Enter additional diagnoses\" }]\r\n        }]\r\n    }\r\n    \r\n    async function onSubmit(survey) {\r\n        const date = new Date();\r\n        const today = `${date.getMonth() + 1}/${date.getDate()}/${date.getFullYear()}`;\r\n    \r\n        const newPatient = {\r\n            name: String(survey.data[\"question1\"]),\r\n            gender_id: String(survey.data[\"question11\"]),\r\n            age: String(survey.data[\"question10Other\"]),\r\n            appointment_day: String(survey.data[\"question2\"]),\r\n            medic: String(survey.data[\"question12\"]),\r\n            contact1: String(survey.data[\"question5\"]),\r\n            contact2: String(survey.data[\"question5Other\"]),\r\n            address: String(survey.data[\"question4\"]),\r\n            zone: String(survey.data[\"question6\"]),\r\n            race: String(survey.data[\"question3\"]),\r\n            program: String(survey.data[\"question9\"]),\r\n            diagnosis_1: String(survey.data[\"question13\"]),\r\n            diagnosis_2: String(survey.data[\"question10\"]),\r\n            priority: 4,\r\n            start_date: String(today),\r\n        };\r\n    \r\n        await fetch(\"http://localhost:5000/new_patient\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(newPatient),\r\n        }).then(() => {\r\n            console.log('created new patient!')\r\n        })\r\n            .catch(error => {\r\n                window.alert(error);\r\n                return;\r\n            });\r\n    }\r\n\r\n    return (<Survey.Survey json={surveyJSON} onComplete={onSubmit} />)\r\n}\r\n\r\n","import './App.css';\r\nimport {Route, Routes} from \"react-router-dom\"\r\nimport PatientSurvey from \"./components/patient_survey.js\"\r\n\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <Routes>\r\n        <Route path=\"/patient-survey\" element={<PatientSurvey />} />\r\n      </Routes>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport \"survey-react/survey.css\";\r\nimport * as Survey from \"survey-react\";\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nSurvey.StylesManager.applyTheme(\"darkrose\");\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"surveyContainer\")\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}